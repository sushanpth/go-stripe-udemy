{{template "base" .}}

{{define "title"}}
  Bronze Plan
{{end}}

{{define "content"}}
  {{$widget := index .Data "widget"}}

  <h2 class="mt-3 text-center">
    Bronze Plan: {{formatCurrency $widget.Price}}
  </h2>
  <hr>
  <div id="card-messages" class="alert alert-danger text-center d-none"></div>
  <form action="/payment-succeeded-temp" method="post"
  name="charge_form" id="charge_form"
  class="d-block needs-validation charge-form"
  autocomplete="off" novalidate="">

    <input type="hidden" name="product_id" value="{{$widget.ID}}">
    <input type="hidden" name="amount" id="amount" value="{{$widget.Price}}">

    <p>{{$widget.Description}}</p>

    <div class="mb-3 form-group">
      <label for="first-name" class="form-label">First Name</label>
      <input type="text" name="first_name" id="first-name" class="form-control"
      required="" autocomplete="first-name-new">
    </div>

    <div class="mb-3 form-group">
      <label for="last-name" class="form-label">Last Name</label>
      <input type="text" name="last_name" id="last-name" class="form-control"
      required="" autocomplete="last-name-new">
    </div>

    <div class="mb-3 form-group">
      <label for="email" class="form-label">Email</label>
      <input type="email" name="email" id="email" class="form-control"
      required="" autocomplete="email-new">
    </div>

    <div class="mb-3 form-group">
      <label for="cardholder-name" class="form-label">Name On Card</label>
      <input type="text" name="cardholder_name" id="cardholder-name" class="form-control"
      required="" autocomplete="cardholder-name-new">
    </div>


    <div class="mb-3 form-group">
      <label for="card-element" class="form-label">Credit Card</label>
      <div id="card-element" class="form-control"></div>
      <div id="card-errors" class="alert p-1 d-none alert-danger text-center" role="alert"></div>
      <div id="card-success" class="alert p-1 d-none alert-success text-center" role="alert"></div>
    </div>
    <hr>
    <a href="javascript:void(0)" onclick="val()" id="pay-button" class="btn btn-primary">
      Pay {{formatCurrency $widget.Price}}/month
    </a>
    <div id="processing-payment" class="text-center d-none">
      <div class="spinner-border text-primary" role="status">
        <div class="visually-hidden">Loading...</div>
      </div>
    </div>
    <input type="hidden" name="payment_intent" id="payment_intent">
    <input type="hidden" name="payment_method" id="payment_method">
    <input type="hidden" name="payment_amount" id="payment_amount">
    <input type="hidden" name="payment_currency" id="payment_currency">
  </form>

{{end}}

{{define "js"}}
  {{$widget := index .Data "widget"}}
  
  <script src="https://js.stripe.com/v3/"></script>

  <script>
    let cardElement;
    const cardMessages = document.getElementById("card-messages");
    const payButton = document.getElementById("pay-button");
    const processing = document.getElementById("processing-payment")

    let stripe = Stripe({{ .StripePublishableKey }});

    function hidePayButton(){
      payButton.classList.add("d-none")
      processing.classList.remove("d-none")
    }

    function showPayButtons(){
      payButton.classList.remove("d-none")
      processing.classList.add("d-none")
    }

    function showCardError(msg){
      cardMessages.classList.add("alert-danger")
      cardMessages.classList.remove("alert-success")
      cardMessages.classList.remove("d-none")
      cardMessages.innerText = msg
    }

    function showCardSuccess(){
      cardMessages.classList.remove("alert-danger")
      cardMessages.classList.add("alert-success")
      cardMessages.classList.remove("d-none")
      cardMessages.innerText = "Transaction successful"
    }

    function val() {
        let form = document.getElementById("charge_form")
      if (form.checkValidity() === false){
        this.event.preventDefault()
        this.event.stopPropagation()
        form.classList.add("was-validated")
        return;
      }
      form.classList.add("was-validated")
      hidePayButton()

      let amountToCharge = document.getElementById("amount").value

      stripe.createPaymentMethod({
        type: 'card',
        card: cardElement,
        billing_details: {
          email: document.getElementById("email").value
        },
      }).then(stripePaymentMethodHandler);
    }

    function stripePaymentMethodHandler(result){
      if (result.error){
        showCardError(result.error.message)
      }else{
        // create customer and subscribe to plan
        let payload = {
          plan: '{{$widget.PlanID}}',
          paymentMethod: result.paymentMethod.id,
          email: document.getElementById("email").value,
          last_four: result.payment_method.card.last4,
        }

        const requestOptions = {
          method: 'post',
          headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(payload),
        }

        fetch('{{.API}}/api/create-customer-and-subscribe-to-plan', requestOptions)
        .then(response => response.json())
        .then(function(data){
          console.log(data);
          processing.classList.add("d-none")
          // set hidden vars 
          // submit the form
        })

      }
    }


    (function(){
      // create stripe & elements 
      const elements = stripe.elements();
      const style = {
        base: {
          fontSize: '16px',
          lineHeight: '24px',
        }
      }

      // create card entry
      cardElement = elements.create('card', {
        style: style,
        hidePostalCode: true,
      });
      cardElement.mount("#card-element");

      // check for input errors
      cardElement.addEventListener('change', function(event){
        let displayError = document.getElementById("card-errors")
        if (event.error){
          displayError.classList.remove('d-none');
          displayError.textContent = event.error.message;
        } else {
          displayError.classList.add('d-none');
          displayError.textContent = "";
        }
      })
    })(); // end anonymous function

  </script>
{{end}}